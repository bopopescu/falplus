// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gm/gm.proto

package igm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	status "status"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GameCreateRequest struct {
	GameType             int64    `protobuf:"varint,1,opt,name=gameType,proto3" json:"gameType"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port"`
	Gid                  string   `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameCreateRequest) Reset()         { *m = GameCreateRequest{} }
func (m *GameCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GameCreateRequest) ProtoMessage()    {}
func (*GameCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{0}
}
func (m *GameCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCreateRequest.Unmarshal(m, b)
}
func (m *GameCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCreateRequest.Marshal(b, m, deterministic)
}
func (m *GameCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCreateRequest.Merge(m, src)
}
func (m *GameCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GameCreateRequest.Size(m)
}
func (m *GameCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameCreateRequest proto.InternalMessageInfo

func (m *GameCreateRequest) GetGameType() int64 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func (m *GameCreateRequest) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *GameCreateRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type GameCreateResponse struct {
	Status               *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	GameType             int64          `protobuf:"varint,2,opt,name=gameType,proto3" json:"gameType"`
	Gid                  string         `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid"`
	Port                 int64          `protobuf:"varint,4,opt,name=port,proto3" json:"port"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GameCreateResponse) Reset()         { *m = GameCreateResponse{} }
func (m *GameCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GameCreateResponse) ProtoMessage()    {}
func (*GameCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{1}
}
func (m *GameCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameCreateResponse.Unmarshal(m, b)
}
func (m *GameCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameCreateResponse.Marshal(b, m, deterministic)
}
func (m *GameCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCreateResponse.Merge(m, src)
}
func (m *GameCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GameCreateResponse.Size(m)
}
func (m *GameCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameCreateResponse proto.InternalMessageInfo

func (m *GameCreateResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GameCreateResponse) GetGameType() int64 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func (m *GameCreateResponse) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *GameCreateResponse) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type GameDeleteRequest struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameDeleteRequest) Reset()         { *m = GameDeleteRequest{} }
func (m *GameDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*GameDeleteRequest) ProtoMessage()    {}
func (*GameDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{2}
}
func (m *GameDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameDeleteRequest.Unmarshal(m, b)
}
func (m *GameDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameDeleteRequest.Marshal(b, m, deterministic)
}
func (m *GameDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameDeleteRequest.Merge(m, src)
}
func (m *GameDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_GameDeleteRequest.Size(m)
}
func (m *GameDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameDeleteRequest proto.InternalMessageInfo

func (m *GameDeleteRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type GameListRequest struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameListRequest) Reset()         { *m = GameListRequest{} }
func (m *GameListRequest) String() string { return proto.CompactTextString(m) }
func (*GameListRequest) ProtoMessage()    {}
func (*GameListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{3}
}
func (m *GameListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameListRequest.Unmarshal(m, b)
}
func (m *GameListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameListRequest.Marshal(b, m, deterministic)
}
func (m *GameListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameListRequest.Merge(m, src)
}
func (m *GameListRequest) XXX_Size() int {
	return xxx_messageInfo_GameListRequest.Size(m)
}
func (m *GameListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameListRequest proto.InternalMessageInfo

func (m *GameListRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type GameListResponse struct {
	Status               *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	Games                []*GameInfo    `protobuf:"bytes,2,rep,name=games,proto3" json:"games"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GameListResponse) Reset()         { *m = GameListResponse{} }
func (m *GameListResponse) String() string { return proto.CompactTextString(m) }
func (*GameListResponse) ProtoMessage()    {}
func (*GameListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{4}
}
func (m *GameListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameListResponse.Unmarshal(m, b)
}
func (m *GameListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameListResponse.Marshal(b, m, deterministic)
}
func (m *GameListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameListResponse.Merge(m, src)
}
func (m *GameListResponse) XXX_Size() int {
	return xxx_messageInfo_GameListResponse.Size(m)
}
func (m *GameListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameListResponse proto.InternalMessageInfo

func (m *GameListResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GameListResponse) GetGames() []*GameInfo {
	if m != nil {
		return m.Games
	}
	return nil
}

type GameInfo struct {
	Gid                  string            `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid"`
	State                int64             `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
	GameType             int64             `protobuf:"varint,3,opt,name=gameType,proto3" json:"gameType"`
	Port                 int64             `protobuf:"varint,4,opt,name=port,proto3" json:"port"`
	Pid                  int64             `protobuf:"varint,5,opt,name=pid,proto3" json:"pid"`
	Players              map[string]string `protobuf:"bytes,6,rep,name=players,proto3" json:"players" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GameInfo) Reset()         { *m = GameInfo{} }
func (m *GameInfo) String() string { return proto.CompactTextString(m) }
func (*GameInfo) ProtoMessage()    {}
func (*GameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{5}
}
func (m *GameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInfo.Unmarshal(m, b)
}
func (m *GameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInfo.Marshal(b, m, deterministic)
}
func (m *GameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInfo.Merge(m, src)
}
func (m *GameInfo) XXX_Size() int {
	return xxx_messageInfo_GameInfo.Size(m)
}
func (m *GameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GameInfo proto.InternalMessageInfo

func (m *GameInfo) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *GameInfo) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *GameInfo) GetGameType() int64 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func (m *GameInfo) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *GameInfo) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *GameInfo) GetPlayers() map[string]string {
	if m != nil {
		return m.Players
	}
	return nil
}

type GameStartRequest struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid"`
	Pid                  string   `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStartRequest) Reset()         { *m = GameStartRequest{} }
func (m *GameStartRequest) String() string { return proto.CompactTextString(m) }
func (*GameStartRequest) ProtoMessage()    {}
func (*GameStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{6}
}
func (m *GameStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartRequest.Unmarshal(m, b)
}
func (m *GameStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartRequest.Marshal(b, m, deterministic)
}
func (m *GameStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartRequest.Merge(m, src)
}
func (m *GameStartRequest) XXX_Size() int {
	return xxx_messageInfo_GameStartRequest.Size(m)
}
func (m *GameStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartRequest proto.InternalMessageInfo

func (m *GameStartRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *GameStartRequest) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

type GameStopRequest struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid"`
	Pid                  string   `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStopRequest) Reset()         { *m = GameStopRequest{} }
func (m *GameStopRequest) String() string { return proto.CompactTextString(m) }
func (*GameStopRequest) ProtoMessage()    {}
func (*GameStopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{7}
}
func (m *GameStopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStopRequest.Unmarshal(m, b)
}
func (m *GameStopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStopRequest.Marshal(b, m, deterministic)
}
func (m *GameStopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStopRequest.Merge(m, src)
}
func (m *GameStopRequest) XXX_Size() int {
	return xxx_messageInfo_GameStopRequest.Size(m)
}
func (m *GameStopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStopRequest proto.InternalMessageInfo

func (m *GameStopRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *GameStopRequest) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

type GMDefaultResponse struct {
	Status               *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GMDefaultResponse) Reset()         { *m = GMDefaultResponse{} }
func (m *GMDefaultResponse) String() string { return proto.CompactTextString(m) }
func (*GMDefaultResponse) ProtoMessage()    {}
func (*GMDefaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{8}
}
func (m *GMDefaultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GMDefaultResponse.Unmarshal(m, b)
}
func (m *GMDefaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GMDefaultResponse.Marshal(b, m, deterministic)
}
func (m *GMDefaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GMDefaultResponse.Merge(m, src)
}
func (m *GMDefaultResponse) XXX_Size() int {
	return xxx_messageInfo_GMDefaultResponse.Size(m)
}
func (m *GMDefaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GMDefaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GMDefaultResponse proto.InternalMessageInfo

func (m *GMDefaultResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GameMessage struct {
	MsgType              int64    `protobuf:"varint,1,opt,name=msgType,proto3" json:"msgType"`
	YourCards            []int64  `protobuf:"varint,2,rep,packed,name=yourCards,proto3" json:"yourCards"`
	LastCards            []int64  `protobuf:"varint,3,rep,packed,name=lastCards,proto3" json:"lastCards"`
	LastId               string   `protobuf:"bytes,4,opt,name=lastId,proto3" json:"lastId"`
	RoundOwner           bool     `protobuf:"varint,5,opt,name=roundOwner,proto3" json:"roundOwner"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameMessage) Reset()         { *m = GameMessage{} }
func (m *GameMessage) String() string { return proto.CompactTextString(m) }
func (*GameMessage) ProtoMessage()    {}
func (*GameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{9}
}
func (m *GameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameMessage.Unmarshal(m, b)
}
func (m *GameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameMessage.Marshal(b, m, deterministic)
}
func (m *GameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameMessage.Merge(m, src)
}
func (m *GameMessage) XXX_Size() int {
	return xxx_messageInfo_GameMessage.Size(m)
}
func (m *GameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GameMessage proto.InternalMessageInfo

func (m *GameMessage) GetMsgType() int64 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *GameMessage) GetYourCards() []int64 {
	if m != nil {
		return m.YourCards
	}
	return nil
}

func (m *GameMessage) GetLastCards() []int64 {
	if m != nil {
		return m.LastCards
	}
	return nil
}

func (m *GameMessage) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *GameMessage) GetRoundOwner() bool {
	if m != nil {
		return m.RoundOwner
	}
	return false
}

type PlayerMessage struct {
	MsgType              int64    `protobuf:"varint,1,opt,name=msgType,proto3" json:"msgType"`
	PutCards             []int64  `protobuf:"varint,2,rep,packed,name=putCards,proto3" json:"putCards"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerMessage) Reset()         { *m = PlayerMessage{} }
func (m *PlayerMessage) String() string { return proto.CompactTextString(m) }
func (*PlayerMessage) ProtoMessage()    {}
func (*PlayerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_910b291f729993e2, []int{10}
}
func (m *PlayerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerMessage.Unmarshal(m, b)
}
func (m *PlayerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerMessage.Marshal(b, m, deterministic)
}
func (m *PlayerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerMessage.Merge(m, src)
}
func (m *PlayerMessage) XXX_Size() int {
	return xxx_messageInfo_PlayerMessage.Size(m)
}
func (m *PlayerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerMessage proto.InternalMessageInfo

func (m *PlayerMessage) GetMsgType() int64 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *PlayerMessage) GetPutCards() []int64 {
	if m != nil {
		return m.PutCards
	}
	return nil
}

func init() {
	proto.RegisterType((*GameCreateRequest)(nil), "igm.GameCreateRequest")
	proto.RegisterType((*GameCreateResponse)(nil), "igm.GameCreateResponse")
	proto.RegisterType((*GameDeleteRequest)(nil), "igm.GameDeleteRequest")
	proto.RegisterType((*GameListRequest)(nil), "igm.GameListRequest")
	proto.RegisterType((*GameListResponse)(nil), "igm.GameListResponse")
	proto.RegisterType((*GameInfo)(nil), "igm.GameInfo")
	proto.RegisterMapType((map[string]string)(nil), "igm.GameInfo.PlayersEntry")
	proto.RegisterType((*GameStartRequest)(nil), "igm.GameStartRequest")
	proto.RegisterType((*GameStopRequest)(nil), "igm.GameStopRequest")
	proto.RegisterType((*GMDefaultResponse)(nil), "igm.GMDefaultResponse")
	proto.RegisterType((*GameMessage)(nil), "igm.GameMessage")
	proto.RegisterType((*PlayerMessage)(nil), "igm.PlayerMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GMClient is the client API for GM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GMClient interface {
	GameCreate(ctx context.Context, in *GameCreateRequest, opts ...grpc.CallOption) (*GameCreateResponse, error)
	GameDelete(ctx context.Context, in *GameDeleteRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error)
	GameList(ctx context.Context, in *GameListRequest, opts ...grpc.CallOption) (*GameListResponse, error)
	GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error)
	GameStop(ctx context.Context, in *GameStopRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error)
}

type gMClient struct {
	cc *grpc.ClientConn
}

func NewGMClient(cc *grpc.ClientConn) GMClient {
	return &gMClient{cc}
}

func (c *gMClient) GameCreate(ctx context.Context, in *GameCreateRequest, opts ...grpc.CallOption) (*GameCreateResponse, error) {
	out := new(GameCreateResponse)
	err := c.cc.Invoke(ctx, "/igm.GM/GameCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gMClient) GameDelete(ctx context.Context, in *GameDeleteRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error) {
	out := new(GMDefaultResponse)
	err := c.cc.Invoke(ctx, "/igm.GM/GameDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gMClient) GameList(ctx context.Context, in *GameListRequest, opts ...grpc.CallOption) (*GameListResponse, error) {
	out := new(GameListResponse)
	err := c.cc.Invoke(ctx, "/igm.GM/GameList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gMClient) GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error) {
	out := new(GMDefaultResponse)
	err := c.cc.Invoke(ctx, "/igm.GM/GameStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gMClient) GameStop(ctx context.Context, in *GameStopRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error) {
	out := new(GMDefaultResponse)
	err := c.cc.Invoke(ctx, "/igm.GM/GameStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GMServer is the server API for GM service.
type GMServer interface {
	GameCreate(context.Context, *GameCreateRequest) (*GameCreateResponse, error)
	GameDelete(context.Context, *GameDeleteRequest) (*GMDefaultResponse, error)
	GameList(context.Context, *GameListRequest) (*GameListResponse, error)
	GameStart(context.Context, *GameStartRequest) (*GMDefaultResponse, error)
	GameStop(context.Context, *GameStopRequest) (*GMDefaultResponse, error)
}

func RegisterGMServer(s *grpc.Server, srv GMServer) {
	s.RegisterService(&_GM_serviceDesc, srv)
}

func _GM_GameCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GMServer).GameCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.GM/GameCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GMServer).GameCreate(ctx, req.(*GameCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GM_GameDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GMServer).GameDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.GM/GameDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GMServer).GameDelete(ctx, req.(*GameDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GM_GameList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GMServer).GameList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.GM/GameList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GMServer).GameList(ctx, req.(*GameListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GM_GameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GMServer).GameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.GM/GameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GMServer).GameStart(ctx, req.(*GameStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GM_GameStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GMServer).GameStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.GM/GameStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GMServer).GameStop(ctx, req.(*GameStopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "igm.GM",
	HandlerType: (*GMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameCreate",
			Handler:    _GM_GameCreate_Handler,
		},
		{
			MethodName: "GameDelete",
			Handler:    _GM_GameDelete_Handler,
		},
		{
			MethodName: "GameList",
			Handler:    _GM_GameList_Handler,
		},
		{
			MethodName: "GameStart",
			Handler:    _GM_GameStart_Handler,
		},
		{
			MethodName: "GameStop",
			Handler:    _GM_GameStop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gm/gm.proto",
}

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	PlayerConn(ctx context.Context, opts ...grpc.CallOption) (Game_PlayerConnClient, error)
	GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error)
	GameStop(ctx context.Context, in *GameStopRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) PlayerConn(ctx context.Context, opts ...grpc.CallOption) (Game_PlayerConnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Game_serviceDesc.Streams[0], "/igm.Game/PlayerConn", opts...)
	if err != nil {
		return nil, err
	}
	x := &gamePlayerConnClient{stream}
	return x, nil
}

type Game_PlayerConnClient interface {
	Send(*PlayerMessage) error
	Recv() (*GameMessage, error)
	grpc.ClientStream
}

type gamePlayerConnClient struct {
	grpc.ClientStream
}

func (x *gamePlayerConnClient) Send(m *PlayerMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gamePlayerConnClient) Recv() (*GameMessage, error) {
	m := new(GameMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gameClient) GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error) {
	out := new(GMDefaultResponse)
	err := c.cc.Invoke(ctx, "/igm.Game/GameStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameClient) GameStop(ctx context.Context, in *GameStopRequest, opts ...grpc.CallOption) (*GMDefaultResponse, error) {
	out := new(GMDefaultResponse)
	err := c.cc.Invoke(ctx, "/igm.Game/GameStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	PlayerConn(Game_PlayerConnServer) error
	GameStart(context.Context, *GameStartRequest) (*GMDefaultResponse, error)
	GameStop(context.Context, *GameStopRequest) (*GMDefaultResponse, error)
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_PlayerConn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServer).PlayerConn(&gamePlayerConnServer{stream})
}

type Game_PlayerConnServer interface {
	Send(*GameMessage) error
	Recv() (*PlayerMessage, error)
	grpc.ServerStream
}

type gamePlayerConnServer struct {
	grpc.ServerStream
}

func (x *gamePlayerConnServer) Send(m *GameMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gamePlayerConnServer) Recv() (*PlayerMessage, error) {
	m := new(PlayerMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Game_GameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.Game/GameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GameStart(ctx, req.(*GameStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Game_GameStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).GameStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igm.Game/GameStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).GameStop(ctx, req.(*GameStopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "igm.Game",
	HandlerType: (*GameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameStart",
			Handler:    _Game_GameStart_Handler,
		},
		{
			MethodName: "GameStop",
			Handler:    _Game_GameStop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PlayerConn",
			Handler:       _Game_PlayerConn_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gm/gm.proto",
}

func init() { proto.RegisterFile("gm/gm.proto", fileDescriptor_910b291f729993e2) }

var fileDescriptor_910b291f729993e2 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x5b, 0x8b, 0xd3, 0x40,
	0x14, 0x6e, 0x92, 0xde, 0x72, 0xea, 0x6a, 0x77, 0x5c, 0xd7, 0x10, 0x44, 0x4a, 0x16, 0xa5, 0x4f,
	0xad, 0xd4, 0x0b, 0x6b, 0x15, 0x05, 0xbb, 0x4b, 0x59, 0xb0, 0x28, 0xa9, 0xbe, 0xf8, 0x22, 0x23,
	0x9d, 0x0d, 0x61, 0x9b, 0x8b, 0x99, 0x89, 0x92, 0x17, 0xff, 0x88, 0xff, 0x64, 0x7f, 0x90, 0xbf,
	0x43, 0x26, 0x27, 0xd7, 0x96, 0x2a, 0x7d, 0xda, 0xa7, 0xcc, 0xf9, 0xce, 0xed, 0x9b, 0xf9, 0xce,
	0x69, 0xa1, 0xe7, 0x78, 0x63, 0xc7, 0x1b, 0x85, 0x51, 0x20, 0x02, 0xa2, 0xb9, 0x8e, 0x67, 0xde,
	0xe5, 0x82, 0x8a, 0x98, 0x8f, 0xf1, 0x83, 0x1e, 0xeb, 0x33, 0x1c, 0xce, 0xa9, 0xc7, 0x66, 0x11,
	0xa3, 0x82, 0xd9, 0xec, 0x7b, 0xcc, 0xb8, 0x20, 0x26, 0x74, 0x1d, 0xea, 0xb1, 0x4f, 0x49, 0xc8,
	0x0c, 0x65, 0xa0, 0x0c, 0x35, 0xbb, 0xb0, 0x09, 0x81, 0x66, 0x18, 0x44, 0xc2, 0x50, 0x53, 0x3c,
	0x3d, 0x93, 0x3e, 0x68, 0x8e, 0xbb, 0x32, 0xb4, 0x81, 0x32, 0xd4, 0x6d, 0x79, 0xb4, 0x7e, 0x01,
	0xa9, 0x96, 0xe5, 0x61, 0xe0, 0x73, 0x46, 0x1e, 0x43, 0x1b, 0x9b, 0xa7, 0x55, 0x7b, 0x93, 0xdb,
	0xa3, 0x8c, 0xcb, 0x32, 0xfd, 0xd8, 0x99, 0xb7, 0xd6, 0x5f, 0xdd, 0xe8, 0xbf, 0xd5, 0xab, 0x60,
	0xd4, 0x2c, 0x19, 0x59, 0x8f, 0xf0, 0x5a, 0x67, 0x6c, 0xcd, 0xca, 0x6b, 0x65, 0xa9, 0x4a, 0x49,
	0xf3, 0x04, 0xee, 0xc8, 0xb0, 0xf7, 0x2e, 0x17, 0xbb, 0x83, 0xbe, 0x42, 0xbf, 0x0c, 0xda, 0xf3,
	0x26, 0x27, 0xd0, 0x92, 0xcc, 0xb9, 0xa1, 0x0e, 0xb4, 0x61, 0x6f, 0x72, 0x30, 0x72, 0x1d, 0x6f,
	0x24, 0xab, 0x5d, 0xf8, 0x97, 0x81, 0x8d, 0x3e, 0xeb, 0x8f, 0x02, 0xdd, 0x1c, 0xdb, 0xee, 0x4f,
	0x8e, 0xa0, 0x25, 0xab, 0xe5, 0x4f, 0x81, 0x46, 0xed, 0x8d, 0xb4, 0x1d, 0x1a, 0x35, 0xeb, 0x1a,
	0x85, 0xee, 0xca, 0x68, 0xa5, 0x90, 0x3c, 0x92, 0x67, 0xd0, 0x09, 0xd7, 0x34, 0x61, 0x11, 0x37,
	0xda, 0x29, 0x3b, 0xb3, 0xc6, 0x6e, 0xf4, 0x11, 0x9d, 0xe7, 0xbe, 0x88, 0x12, 0x3b, 0x0f, 0x35,
	0xa7, 0x70, 0xab, 0xea, 0x90, 0x75, 0xaf, 0x58, 0x92, 0xf3, 0xbd, 0x62, 0x89, 0xe4, 0xfb, 0x83,
	0xae, 0x63, 0xe4, 0xab, 0xdb, 0x68, 0x4c, 0xd5, 0x53, 0xc5, 0x7a, 0x81, 0x2f, 0xb9, 0x14, 0x34,
	0xda, 0xfd, 0xde, 0x39, 0x53, 0xcc, 0x96, 0x47, 0xeb, 0x39, 0xca, 0xb4, 0x14, 0x41, 0xb8, 0x4f,
	0xda, 0x2b, 0x38, 0x9c, 0x2f, 0xce, 0xd8, 0x25, 0x8d, 0xd7, 0x7b, 0x2b, 0x67, 0xfd, 0x56, 0xa0,
	0x27, 0x9b, 0x2e, 0x18, 0xe7, 0xd4, 0x61, 0xc4, 0x80, 0x8e, 0xc7, 0x9d, 0xca, 0x4a, 0xe4, 0x26,
	0x79, 0x00, 0x7a, 0x12, 0xc4, 0xd1, 0x8c, 0x46, 0x2b, 0xd4, 0x59, 0xb3, 0x4b, 0x40, 0x7a, 0xd7,
	0x94, 0x0b, 0xf4, 0x6a, 0xe8, 0x2d, 0x00, 0x72, 0x0c, 0x6d, 0x69, 0x5c, 0xac, 0x52, 0xad, 0x74,
	0x3b, 0xb3, 0xc8, 0x43, 0x80, 0x28, 0x88, 0xfd, 0xd5, 0x87, 0x9f, 0x3e, 0x8b, 0x52, 0xd1, 0xba,
	0x76, 0x05, 0xb1, 0xce, 0xe1, 0x00, 0x55, 0xf8, 0x3f, 0x3d, 0x13, 0xba, 0x61, 0x2c, 0xaa, 0xec,
	0x0a, 0x7b, 0x72, 0xad, 0x82, 0x3a, 0x5f, 0x90, 0xb7, 0x00, 0xe5, 0xb6, 0x92, 0xe3, 0x62, 0x0c,
	0x6a, 0xbf, 0x0a, 0xe6, 0xfd, 0x2d, 0x1c, 0x9f, 0xd4, 0x6a, 0x90, 0x37, 0x58, 0x00, 0xd7, 0xad,
	0x52, 0xa0, 0xb6, 0x7f, 0x66, 0x86, 0x6f, 0x4a, 0x62, 0x35, 0xc8, 0x4b, 0x5c, 0x00, 0xb9, 0x62,
	0xe4, 0xa8, 0xc8, 0xae, 0xac, 0xa5, 0x79, 0x6f, 0x03, 0x2d, 0x52, 0x5f, 0x83, 0x5e, 0xcc, 0x14,
	0x29, 0xa3, 0xaa, 0x33, 0xf6, 0x8f, 0xc6, 0x53, 0x6c, 0x2c, 0x27, 0xab, 0xd2, 0xb8, 0x32, 0x68,
	0xbb, 0x73, 0x27, 0xd7, 0x0a, 0x34, 0x65, 0x34, 0x39, 0x05, 0x40, 0x31, 0x66, 0x81, 0xef, 0x13,
	0x92, 0x26, 0xd4, 0xd4, 0x31, 0xfb, 0x45, 0xe9, 0x0c, 0xb1, 0x1a, 0x43, 0xe5, 0x89, 0x72, 0x73,
	0xe4, 0xdf, 0xe9, 0x5f, 0x3a, 0x34, 0x74, 0xc7, 0xae, 0xe3, 0x7d, 0x6b, 0xa7, 0xff, 0x04, 0x4f,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xb6, 0xc8, 0x2c, 0x32, 0x06, 0x00, 0x00,
}
